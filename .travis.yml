sudo: false

dist: trusty

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - libsecret-1-dev

matrix:
  # abi versions https://github.com/mapbox/node-pre-gyp/blob/master/lib/util/abi_crosswalk.json
  include:
    # linux
    - os: linux   # abi 57
      env: NODE_VERSION="8.9.3" CXX="g++-7"
    - os: linux   # abi 54
      env: NODE_VERSION="7.4" ELECTRON="1.7.0" CXX="g++-7"
    - os: linux   # abi 64 (vscode 1.31)
      env: NODE_VERSION="10.13.0" CXX="g++-7" ELECTRON="3.0.13"
    - os: linux   # abi 64
      env: NODE_VERSION="10.13.0" CXX="g++-7"
    - os: linux   # abi 69 (vscode 1.36)
      env: NODE_VERSION="10.11.0" CXX="g++-7" ELECTRON="4.2.9"
    - os: linux   # abi 73 (vscode 1.39.1)
      env: NODE_VERSION="12.4.0" CXX="g++-7" ELECTRON="6.0.9"
    - os: linux   # abi 75 (vscode 1.46)
      env: NODE_VERSION="12.8.1" CXX="g++-7" ELECTRON="7.3.1"
    - os: linux   # abi 72
      env: NODE_VERSION="12.4.0" CXX="g++-7"
    # os x x86
    - os: osx     # abi 57
      env: NODE_VERSION="8.9.3" CXX="clang"
    - os: osx     # abi 54
      env: NODE_VERSION="7.4" ELECTRON="1.7.0" CXX="clang"
    - os: osx   # abi 64 (vscode 1.31)
      env: NODE_VERSION="10.13.0" CXX="clang" ELECTRON="3.0.13"
    - os: osx     # abi 64
      env: NODE_VERSION="10.13.0" CXX="clang"
    - os: osx   # abi 69 (vscode 1.36)
      env: NODE_VERSION="10.11.0" CXX="clang" ELECTRON="4.2.9"
    - os: osx   # abi 73 (vscode 1.39.1)
      env: NODE_VERSION="12.4.0" CXX="clang" ELECTRON="6.0.9"
    - os: osx   # abi 75 (vscode 1.46)
      env: NODE_VERSION="12.8.1" CXX="clang" ELECTRON="7.3.1"
    - os: osx   # abi 72
      env: NODE_VERSION="12.4.0" CXX="clang"

before_install:
  - rm -rf ~/.nvm/ && git clone --depth 1 "https://github.com/creationix/nvm.git" ~/.nvm
  - source ~/.nvm/nvm.sh
  - nvm install $NODE_VERSION
  - nvm use $NODE_VERSION
  - export PATH="./node_modules/.bin/:$PATH"

install:
  - if [[ -n "$ELECTRON" ]]; then
      export npm_config_target=$ELECTRON;
      export npm_config_disturl=https://atom.io/download/electron;
      export npm_config_runtime=electron;
      export npm_config_build_from_source=true;
    fi
  - |
    pushd fuzzy-native
      npm install
      npm run build
    popd
  - |
    pushd keytar
      npm install
      npm run build
    popd
  - |
    pushd pty
      npm install
      npm run tsc
      npm run build
    popd

script:
  - |
    pushd fuzzy-native
      [[ -z "$ELECTRON" ]] && npm test
      node-pre-gyp configure build package testpackage
    popd
  - |
    pushd keytar
      [[ -z "$ELECTRON" ]] && npm test
      node-pre-gyp configure build package testpackage
    popd
  - |
    pushd pty
      [[ -z "$ELECTRON" ]] && npm test
      node-pre-gyp configure build package testpackage
    popd

git:
  depth: 10

branches:
  only:
    - master
    - /^v\d+\.\d+\.\d+(?:-[a-z0-9.-]+)?$/

deploy:
  provider: releases
  api_key:
    secure: DcAmqsYyHesJI2I5q2Ugb2WKqV9fbVfLcpSfAN3awCX3YQaDrWzIT6w8TdVLAFYlw1Hj7P/TVHPxZOcEgZqP8pVM4Y28Tt8b6IcYtpT2Hs1k9FhHJLjZsYIw0l5ka9r2hd03fDXbmLLSg++v8tQjIUkzJrxlop/1wA/EbE03oSoJJ8lHGW3wtCXxkisrkza14IK7MIuROY3gqkeOVlc6wnqNe82ijF7URWnIpspXFxqW9tRHUcb9XjsJqB+by+et8bhtnJp+CzK0Fiz7ENKFNh+680/e5grVH0b8LrH7ChLkIf/AGJAFRkgta48PnvxKwlrhivi1jOfB5wejl3N2Zjm2XHT70Nj4j5ShfvPBxUxhV69nBKiXsl9JP0uLSUItLuaSuf09GiJXk53So/dgQQoiLvGQ6XkRZA2EoRR8G4WzhTG7V3IiKWScEA2o6g7F/v66w4vcTgvWWAQAgvxy2KMRkR1ModvcNxmyOkJqPOcG5vYw4MqZOZzfVOeqxTEUgks/ZC7TwiJnhmQrdQYWUxxqO1l4J+oBfu/3QE2iK7qrQEvMtJTm9IOQZh/Jk7zzCFySPlwpp7zwxVenUx0F3Vdc7SdLUVCEDQi+erR+4cbWJx13wtJCn5qVTrV4+vkR1Th8xlvCFTGRqy335DpGtdfNZBCfkNhSetcCUdwW4kQ=
  skip_cleanup: true
  file_glob: true
  file: "*/build/stage/*.tar.gz"
  overwrite: true
  on:
    repo: facebook-atom/nuclide-prebuilt-libs
    tags: true
